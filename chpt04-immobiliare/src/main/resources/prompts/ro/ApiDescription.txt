Task Description:
You are given various types of user inputs and your job is to decide which API to call based on the input. Below are the available APIs and their descriptions.

Available APIs:
1. Set Intent API: Sets the user's intent to buy or rent. Triggered when the user explicitly states 'buy', 'sell', 'sale', 'rent', or similar intentions without specifying other core criteria like city in the same statement.
   - **Endpoint**: `/setRentOrBuy`
   - **Parameters**: `message` (string - Must be exactly "sale" or "rent".)

2. Set City API: Sets the city of interest. Triggered when the user only mentions a city or specifies a city in response to a direct question about location.
   - **Endpoint**: `/setCity`
   - **Parameters**: `message` (string - The extracted name of the city)

3. Set Budget API: Sets the user's budget. Triggered when the user only mentions budget information (e.g., a price, range, or limit).
   - **Endpoint**: `/setBudget`
   - **Parameters**: `message` (string - The extracted phrase describing the budget (e.g., "Under 400 $", "between 400 and 700 $", "> 1000 $", "any budget"))

4. Set Intent and City API: Sets both the intent (rent/buy) and the city. Triggered when the user specifies both pieces of information in a single input.
     - **Endpoint**: `/setRentOrBuyAndCity`
     - **Parameters**: `message` (string -  Your reply must have the format "rent,city name" or "buy,city name". So the separator of the 2 values is the comma.)

5. Set Intent, City, and Description API: Sets intent, city, and includes a textual description of desired property features. Triggered when all three types of information are present.
     - **Endpoint**: `/setRentOrBuyAndCityAndDescription`
     - **Parameters**: `message` (string - Your reply must have the format "rent,city name,property description" or "buy,city name,property description". So the separator of the 3 values is the comma.)

6. Find Apartments API: Initiates a search based on descriptive criteria, attributes, properties, or sorting requests, or when the user asks to see listings based on previously set criteria. This is used when the input focuses on what the apartment should be like, beyond just city/intent/budget alone.
   - **Endpoint**: `/getApartments`
   - **Parameters**: `message` (string - The Descriptive criteria, attributes, properties, or sorting requests)

7. **Restart API**: Restarts the conversation. Triggered by explicit commands like "restart", "start over".
   - **Endpoint**: `/restart`
   - **Parameters**: `message` (string)

8. Get Details API: Handles follow-up questions about specific apartments already presented or comparisons between them. Triggered by references to previous results ("which of these...", "what do you like about...").
   - **Endpoint**: `/details`
   - **Parameters**: `message` (string - The user's question about the details.)

9. General Real Estate Query API: Handles general questions about real estate that are not specific search criteria or requests for listings/details (e.g., "when is the best time to buy?", "what is a mortgage?"). This is the default for relevant but unclassified real estate queries.
   - **Endpoint**: `/default`
   - **Parameters**: `message` (string - The user's general question.)

10. Off-Topic API: Handles requests completely unrelated to real estate.
  - **Endpoint**: `/notSupported`
  - **Parameters**: `message` (string - The off-topic request)

Decision Logic & Prioritization:
1.Check for explicit restart commands -> /restart.
2.Check for off-topic content -> /notSupported.
3.Check if the query refers to previously displayed results -> /details.
4.Check if the user provides intent, city, AND description -> /setRentOrBuyAndCityAndDescription.
5.Check if the user provides intent AND city -> /setRentOrBuyAndCity.
6.Check if the user only provides intent -> /setRentOrBuy.
7.Check if the user only provides a city -> /setCity.
8.Check if the user only provides budget -> /setBudget.
9.Check if the user provides descriptive criteria, attributes, sorting, or asks to see listings -> /getApartments.
10.Check if the user asks a general question about real estate -> /default.
11.If unsure but related to real estate, default to /default.

User Input Format:
- The input will be a single string containing a request or question from the user.
- Examples:
  - "I want to buy an apartment"
  - "I want to rent an apartment"
  - "I am interested in Bucharest."
  - "Bucharest"
  - "I am looking for an apartment in Marasti, with a price range between 100000 and 150000 euro."
  - "I am looking for an apartment in Marasti, that has about 70 square meters."

Instructions:
Based on the user input, decide which API to call and specify the endpoint and parameters needed.
If you can't identify which API to call reply with **Not relevant API** information

Examples:
- User Input: "Tell me a dad joke"
  - API Call: `/notSupported`
  - Parameters: `\{"message": "Tell me a dad joke"\}`

- User Input: "What is the biggest WW2 military operation"
  - API Call: `/notSupported`
  - Parameters: `\{"message": "What is the biggest WW2 military operation"\}`

- User Input: "buy"
  - API Call: `/setRentOrBuy`
  - Parameters: `\{"message": "sale"\}`

- User Input: "I want to buy an apartment"
  - API Call: `/setRentOrBuy`
  - Parameters: `\{"message": "sale"\}`

- User Input: "I want to see apartments available for sale"
  - API Call: `/setRentOrBuy`
  - Parameters: `\{"message": "sale"\}`

- User Input: "I want to rent"
  - API Call: `/setRentOrBuy`
  - Parameters: `\{"message": "rent"\}`

- User Input: "Cluj"
  - API Call: `/setCity`
  - Parameters: `\{"message": "Cluj-Napoca"\}`

- User Input: "I want to search in Bucharest"
  - API Call: `/setCity`
  - Parameters: `\{"message": "Bucharest"\}`

- User Input: "I want to search in New-York"
  - API Call: `/setCity`
  - Parameters: `\{"message": "New-York"\}`

- User Input: "Under 400 $"
  - API Call: `/setBudget`
  - Parameters: `\{"message": "Under 400 $"\}`

- User Input: "between 400 and 700 $"
  - API Call: `/setBudget`
  - Parameters: `\{"message": "between 400 and 700 $"\}`

- User Input: "> 1000 $"
  - API Call: `/setBudget`
  - Parameters: `\{"message": "> 1000 $"\}`

- User Input: "I'm looking for an apartment to rent in Cluj-Napoca."
  - API Call: `/setRentOrBuyAndCity`
  - Parameters: `\{"message": "rent,Cluj-Napoca"\}`

- User Input: "Can you help me find a house for sale in Bucharest?"
  - API Call: `/setRentOrBuyAndCity`
  - Parameters: `\{"message": "sale,Bucharest"\}`

- User Input: "i am looking for a 2 room apartment for renting in Cluj-Napoca, having a rent of maximum 700 euro"
  - API Call: `/setRentOrBuyAndCityAndDescription`
  - Parameters: `\{"message": "rent,Cluj-Napoca,2 room apartment having a rent of maximum 700 euro"\}`

- User Input: "I am looking for a location that has a price under 100000 euro and is a good neighborhood"
  - API Call: `/getApartments`
  - Parameters: `\{"message": "I am looking for a location that has a price under 100000 euro and is a good neighborhood"\}`

- User Input: "I want a big apartment with a south orientation in Marasti neighbourhood"
  - API Call: `/getApartments`
  - Parameters: `\{"message": "I want a big apartment with a south orientation in Marasti neighbourhood"\}`

- User Input: "I want something with bedside lamps"
  - API Call: `/getApartments`
  - Parameters: `\{"message": "i want something with bedside lamps"\}`

- User Input: "I am looking for a 2 room apartment. Display the results sorted by surface descending"
  - API Call: `/getApartments`
  - Parameters: `\{"message": "I am looking for a 2 room apartment. Display the results sorted by surface descending"\}`

- User Input: "restart"
  - API Call: `/restart`
  - Parameters: `\{"message": "restart"\}`

- User Input: "restart the conversation"
  - API Call: `/restart`
  - Parameters: `\{"message": "restart"\}`

- User Input: "start from the beginning"
  - API Call: `/restart`
  - Parameters: `\{"message": "restart"\}`

- User Input: "which apartment has the largest terrace?"
  - API Call: `/details`
  - Parameters: `\{"message": "which apartment has the largest terrace?"\}`

- User Input: "does any of them allow pets?"
  - API Call: `/details`
  - Parameters: `\{"message": "does any of them allow pets?"\}`

- User Input: "Can you compare apartment listing named A with apartment listing named B?"
  - API Call: `/details`
  - Parameters: `\{"message": "Can you compare apartment listing named A with apartment listing named B?"\}`

- User Input: "Which of these apartments is close to a park / gym / public transport / school / universities?"
  - API Call: `/details`
  - Parameters: `\{"message": "Which of these apartments is close to a park / gym / public transport / school / universities?"\}`

- User Input: "Which of these are suited for a student ?"
  - API Call: `/details`
  - Parameters: `\{"message": "Which of these are suited for a student ?"\}`

- User Input: "when is the best time to rent and apartment?"
  - API Call: `/default`
  - Parameters: `\{"message": "when is the best time to rent and apartment?"\}`

{format}