spring.profiles.active=dev

#this server.port property is needed because on heroku the app runs on a port different from 8080...and that port will
# be provided by an env variable when the container starts
server.port=${PORT:8080}

server.error.whitelabel.enabled=false
server.error.path=/error

# this was added because after doing a reimport of libs, i got an error because of a bean being defined
# in both spring ai and also in spring mongo libs. so since in one of those libs, in spring mongo,
# the bean in question was created with a empty list, and in spring AI it was created with 2 converters,
# i decided to overrite it and define it as it was in spring ai, in my class MongoDBConfig,
# MongoCustomConversions mongoCustomConversions
spring.main.allow-bean-definition-overriding=true

spring.application.name=spring-ai-immobiliare
server.servlet.session.timeout=40m
server.forward-headers-strategy=framework

spring.ai.openai.api-key=${OPEN_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o

spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash-001
spring.ai.vertex.ai.gemini.location=europe-central2

spring.devtools.livereload.enabled=true  

spring.data.mongodb.database=${MONGO_DATABASE}
spring.data.mongodb.uri=mongodb+srv://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_CLUSTER}
spring.ai.vectorstore.mongodb.collection-name=conversation_history

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=100MB

# observability params
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.server.port=8080
# Metrics Configuration - Essential settings for good data collection
management.metrics.distribution.percentiles-histogram.all=true
management.metrics.enable.all=true

# Micrometer Tracing for exemplars
# 1.0 (100%) means trace all requests.
#A lower value (e.g., 0.1) would sample only 10% of requests.
management.tracing.sampling.probability=1.0
management.tracing.enabled=true
